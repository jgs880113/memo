select *
  from TEST A
 WHERE 
(
EXISTS (SELECT 1
                 FROM code aa
                WHERE A.STRTITLE = AA.CODE AND AA.FLAG IN('A','B'))
OR
NOT EXISTS (SELECT 1
                 FROM code aa
                WHERE A.STRTITLE = AA.CODE AND AA.NAME IS NULL AND AA.FLAG IN('A','B'))
)

SELECT * 
FROM TEST A
WHERE A.STRTITLE IN (
    SELECT CODE 
    FROM code 
    WHERE FLAG IN ('A', 'B')
)
OR A.STRTITLE NOT IN (
    SELECT CODE 
    FROM code 
    WHERE NAME IS NULL AND FLAG IN ('A', 'B')
);
➡ EXISTS 및 NOT EXISTS 대체

EXISTS → IN 서브쿼리

NOT EXISTS → NOT IN 서브쿼리


WITH 
    (SELECT groupArray(CODE) FROM code WHERE FLAG IN ('A', 'B')) AS exists_codes,
    (SELECT groupArray(CODE) FROM code WHERE NAME IS NULL AND FLAG IN ('A', 'B')) AS not_exists_codes

SELECT *
FROM TEST A
WHERE A.STRTITLE IN exists_codes
   OR A.STRTITLE NOT IN not_exists_codes;

WITH 
    (SELECT groupArray(CODE) FROM code WHERE FLAG IN ('A', 'B')) AS valid_codes,
    (SELECT groupArray(CODE) FROM code WHERE NAME IS NULL AND FLAG IN ('A', 'B')) AS invalid_codes

SELECT *
FROM TEST A
WHERE A.STRTITLE IN valid_codes
   OR A.STRTITLE NOT IN invalid_codes;


SELECT A.*
FROM TEST A
WHERE A.STRTITLE IN (
    SELECT CODE FROM code WHERE FLAG IN ('A', 'B')
)
OR A.STRTITLE NOT IN (
    SELECT CODE FROM code WHERE NAME IS NULL AND FLAG IN ('A', 'B')
);


SELECT A.*
FROM TEST A
LEFT JOIN (
    SELECT CODE, 1 AS is_valid
    FROM code
    WHERE FLAG IN ('A', 'B')
) AS valid
ON A.STRTITLE = valid.CODE

LEFT JOIN (
    SELECT CODE, 1 AS is_invalid
    FROM code
    WHERE NAME IS NULL AND FLAG IN ('A', 'B')
) AS invalid
ON A.STRTITLE = invalid.CODE

WHERE valid.is_valid = 1 OR invalid.CODE IS NULL;


-- 딕셔너리 테이블 생성 (예시)
CREATE DICTIONARY code_dict
(
  `CODE` String,
  `FLAG` String,
  `NAME` Nullable(String)
)
PRIMARY KEY CODE
SOURCE(CLICKHOUSE(HOST '192.168.75.128' PORT 8123 USER 'default' PASSWORD '[HIDDEN]' DB 'default' TABLE 'code'))
LIFETIME(MIN 3600 MAX 7200)
LAYOUT(FLAT());
FLAT(): 모든 키와 값을 하나의 연속된 메모리 영역에 저장합니다. 작은 테이블에 적합하며, 메모리 사용량이 적고 조회 성능이 뛰어납니다.

-- 딕셔너리 테이블을 사용하는 쿼리
SELECT A.*
FROM TEST A
WHERE dictGet('code_dict', 'FLAG', A.STRTITLE) IN ('A', 'B')
   OR dictGet('code_dict', 'NAME', A.STRTITLE) IS NULL;

SELECT * 
FROM TEST A
WHERE 
    dictHas(default.code_dict, A.STRTITLE)  -- EXISTS 대체
    OR NOT dictHas(default.code_dict, A.STRTITLE)  -- NOT EXISTS 대체
    OR (dictHas(default.code_dict, A.STRTITLE) 
        AND dictGetOrDefault(default.code_dict, 'NAME', A.STRTITLE, '') IS NOT NULL);

SELECT A.*
FROM TEST A
WHERE 
(
    dictHas(default.code_dict, A.STRTITLE) 
    AND dictGetOrDefault(default.code_dict, 'FLAG', A.STRTITLE, '') IN ('A', 'B')
)
OR
(
    NOT dictHas(default.code_dict, A.STRTITLE)  
    OR (
        dictHas(default.code_dict, A.STRTITLE) 
        AND dictGetOrDefault(default.code_dict, 'FLAG', A.STRTITLE, '') IN ('A', 'B')  
        AND dictGetOrDefault(default.code_dict, 'NAME', A.STRTITLE, '') IS NOT NULL
    )
);

