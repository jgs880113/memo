클릭하우스(ClickHouse) 성능 향상 설정
제시해주신 쿼리의 성능을 향상시키기 위해 고려할 수 있는 클릭하우스 설정은 다음과 같습니다.

1. max_threads:

클릭하우스 서버가 사용할 수 있는 최대 스레드 수를 설정합니다.
CPU 코어 수보다 약간 큰 값으로 설정하는 것이 일반적입니다.
너무 큰 값으로 설정하면 컨텍스트 스위칭 오버헤드가 발생할 수 있으므로, 적절한 값을 찾는 것이 중요합니다.
예시: SET max_threads = 64;
2. query_cache_size:

쿼리 결과를 캐시하여 동일한 쿼리 요청에 대해 빠르게 응답할 수 있도록 합니다.
캐시 크기가 클수록 더 많은 쿼리 결과를 저장할 수 있지만, 메모리 사용량이 증가합니다.
예시: SET query_cache_size = 104857600; (100MB)
3. data_transfer_max_block_size:

데이터 전송 시 블록의 최대 크기를 설정합니다.
블록 크기가 클수록 데이터 전송 효율이 향상되지만, 메모리 사용량이 증가합니다.
예시: SET data_transfer_max_block_size = 1048576; (1MB)
4. max_memory_usage:

쿼리 실행 시 사용할 수 있는 최대 메모리 크기를 설정합니다.
메모리 부족으로 인한 오류를 방지하기 위해 적절한 값을 설정하는 것이 중요합니다.
예시: SET max_memory_usage = 10737418240; (10GB)
5. merge_factor:

MergeTree 테이블의 데이터 병합 작업을 제어하는 설정입니다.
값이 작을수록 병합 작업이 자주 발생하지만, 작은 파티션이 많아져 쿼리 성능이 저하될 수 있습니다.
값이 클수록 병합 작업이 덜 발생하지만, 큰 파티션이 많아져 데이터 삽입 성능이 저하될 수 있습니다.
예시: SET merge_factor = 32;
6. background_pool_size:

백그라운드 작업(예: 데이터 병합, 인덱스 생성)을 수행하는 스레드 풀의 크기를 설정합니다.
백그라운드 작업이 많을수록 값을 늘려주는 것이 좋습니다.
예시: SET background_pool_size = 16;
7. distributed_ddl_allow_sync:

분산 테이블 생성/수정/삭제 시 동기 모드로 실행할지 여부를 설정합니다.
동기 모드는 안정성을 높이지만, 성능이 저하될 수 있습니다.
비동기 모드는 성능을 향상시키지만, 오류 발생 시 데이터 불일치가 발생할 수 있습니다.
예시: SET distributed_ddl_allow_sync = 0; (비동기 모드)
8. optimize_on_insert:

MergeTree 테이블에 데이터 삽입 시 자동으로 최적화를 수행할지 여부를 설정합니다.
활성화하면 데이터 삽입 성능이 저하될 수 있지만, 쿼리 성능이 향상될 수 있습니다.
예시: SET optimize_on_insert = 1; (활성화)
9. use_uncompressed_cache:

압축되지 않은 데이터를 캐시에 저장할지 여부를 설정합니다.
활성화하면 캐시 hit
