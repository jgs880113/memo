해결 방법 1: 파티션 단위로 OPTIMIZE 실행
하루 단위로 파티션을 나눴다면, 한 번에 전체 테이블을 최적화하지 말고, 날짜별로 최적화하면 속도를 줄일 수 있음.

OPTIMIZE TABLE TEST PARTITION '20240226' FINAL;
OPTIMIZE TABLE TEST PARTITION '20240227' FINAL;
OPTIMIZE TABLE TEST PARTITION '20240228' FINAL;
이렇게 하면 한 번에 한 개의 파티션만 병합하기 때문에 전체 테이블보다 빠름.

자동으로 최근 N일 데이터만 병합하는 방법

SELECT DISTINCT partition FROM system.parts 
WHERE table = 'TEST' 
ORDER BY partition DESC 
LIMIT 3;
최근 3일치 파티션을 가져와서, 해당 파티션만 OPTIMIZE 하면 됨.
해결 방법 2: 백그라운드에서 천천히 병합 (optimize_throw_if_noop=0)
기본적으로 OPTIMIZE TABLE은 병합할 데이터가 많으면 300초 제한으로 실패함.
하지만 백그라운드에서 천천히 병합하는 방식으로 바꿀 수 있음.

SET optimize_throw_if_noop = 0;
OPTIMIZE TABLE TEST FINAL;
이렇게 하면 병합이 오래 걸려도 실패하지 않고, 백그라운드에서 실행됨.

해결 방법 3: 시스템 설정 조정 (max_execution_time 증가)
300초 제한이 걸리는 이유는 max_execution_time 값 때문일 가능성이 있음.
이 값을 늘려서 더 오래 실행할 수 있도록 허용할 수도 있음.


SET max_execution_time = 600;
OPTIMIZE TABLE TEST FINAL;
이렇게 하면 최대 실행 시간을 600초로 늘려서 강제 종료되지 않게 함.

해결 방법 4: 병렬 병합 작업 허용 (background_merges_mutations_concurrency)
ClickHouse는 병합을 병렬로 실행하는 개수를 제한하는데,
이 설정을 올리면 병합 속도를 높일 수 있음.

SET background_merges_mutations_concurrency = 8;
이렇게 하면 병합을 최대 8개까지 병렬로 실행할 수 있음.
(서버 리소스에 따라 값 조정 필요)

결론: 가장 빠른 최적화 방법
1️⃣ 날짜별로 PARTITION 병합 (OPTIMIZE TABLE TEST PARTITION 'YYYYMMDD' FINAL;)
2️⃣ 백그라운드에서 천천히 실행 (SET optimize_throw_if_noop = 0;)
3️⃣ 최대 실행 시간 증가 (SET max_execution_time = 600;)
4️⃣ 병렬 병합 개수 증가 (SET background_merges_mutations_concurrency = 8;)

위 방법을 조합하면, 300초 이상 걸려도 안정적으로 병합 가능하게 만들 수 있음 🚀



==============================================================================================================

✅ (1) 파티션 내 병합을 강제 실행 (FINAL 옵션 추가)
만약, 같은 날짜의 파티션 안에서도 병합이 일어나지 않는다면, FINAL 옵션을 추가해야 합니다.

OPTIMIZE TABLE TEST PARTITION '20240201' FINAL;

병합이 백그라운드에서 일어나지 않는 경우
ClickHouse는 내부적으로 병합 작업을 백그라운드에서 수행합니다.
병합이 일어나지 않는다면, 아래 설정을 확인해야 합니다.

SELECT * FROM system.merge_tree_settings WHERE name LIKE '%merge%';
특히 아래 설정값들을 확인하세요:

background_pool_size: 병합을 실행하는 백그라운드 스레드 수
background_schedule_pool_size: 백그라운드 작업을 처리하는 큐 크기
parts_to_throw_insert: 너무 많은 파트가 있으면 삽입을 거부하는 값
merge_max_block_size: 한 번에 병합할 수 있는 최대 블록 크기
max_partitions_to_read: 병합할 때 한 번에 읽을 수 있는 최대 파티션 수
👉 병합이 너무 느리다면?

SYSTEM START MERGES TEST;
이 명령어를 실행해서 수동으로 병합 프로세스를 시작할 수도 있음.
백그라운드에서 병합을 활성화하여 자동으로 병합되도록 설정

✅ 4) INSERT 최적화 방법
🚀 해결책: INSERT 실행 방식을 변경하여 작은 part 생성을 방지

INSERT INTO TEST SELECT * FROM some_source_table SETTINGS insert_distributed_sync = 1;
✅ insert_distributed_sync = 1을 설정하면 ClickHouse가 병렬 노드에 데이터를 한 번에 보냄
✅ 작은 파트들이 생성되는 것을 방지하고, 병합이 더 빠르게 일어날 가능성이 높음



merge_max_size = 1024000000
merge_max_bytes_to_use_cache = 1000000000

background_pool_size = 16
background_merges_mutations_concurrency_ratio = 1.0

SET max_execution_time = 1800; -- 30분
